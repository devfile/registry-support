openapi: 3.0.1
info:
  title: Devfile registry REST API.
  description: |-
    Documentation of devfile registry REST API.

    The devfile registry REST API is used for interacting with devfile registry. In this documentation, the host is serving the public devfile registry, you can change it to your own host if you want to use private devfile registry.
  version: 1.0.1
servers:
- url: https://registry.stage.devfile.io/
- url: https://registry.devfile.io/
paths:
  /devfiles/{stack}:
    get:
      tags:
      - devfile
      summary: Get devfile by stack name.
      description: Return the specific stack devfile content of devfile registry.
      operationId: serveDevfile
      parameters:
      - name: stack
        in: path
        description: The stack name
        required: true
        schema:
          type: string
          x-go-name: Stack
        x-go-name: Stack
      responses:
        200:
          $ref: '#/components/responses/devfileResponse'
        404:
          $ref: '#/components/responses/devfileNotFoundResponse'
        500:
          $ref: '#/components/responses/devfileErrorResponse'
  /health:
    get:
      tags:
      - server
      summary: Get health status.
      description: Return the devfile registry health status.
      operationId: serveHealthCheck
      responses:
        200:
          $ref: '#/components/responses/healthResponse'
        404:
          description: 'Page not found.'
          content: {}
  /index:
    get:
      tags:
      - devfile
      summary: Get index.
      description: Return the index content of devfile registry.
      operationId: serveDevfileIndexV1
      responses:
        200:
          $ref: '#/components/responses/indexResponse'
        404:
          description: 'Page not found.'
          content: {}
  /devfiles/{stack}/starter-projects/{starterProject}:
    get:
      summary: Fetches starter project by stack and project name
      description: |-
        Fetches starter project specified in requested registry stack devfile with 
        version's content and provides an archive (zip) file download as the HTTP response.
      operationId: serveDevfileStarterProject
      parameters:
      - name: stack
        in: path
        description: The stack name
        required: true
        schema:
          type: string
          x-go-name: Stack
        x-go-name: Stack
      - name:  starterProject
        in: path
        description: The starter project name in the stack devfile
        required: true
        schema:
          type: string
          x-go-name: StarterProject
        x-go-name: StarterProject
      responses:
        '200':
          $ref: '#/components/responses/starterProjectResponse'
        '404':
          description: 'Page not found.'
          content: {}
        '500':
          description: Failed to get the devfile or starter project.
          $ref: '#/components/responses/devfileErrorResponse'

components:
  schemas:
    Devfile:
      allOf:
        - $ref: 'https://raw.githubusercontent.com/devfile/api/v2.2.0/schemas/latest/devfile.json'
        - x-go-package: github.com/devfile/api/v2/pkg/apis/workspaces/v1alpha2
    Schema:
      $ref: '../../schemas/index/schema.json'
  responses:
    devfileErrorResponse:
      description: Failed to get the devfile.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                x-go-name: Error
              status:
                type: string
                x-go-name: Status
        application/yaml:
          schema:
            type: object
            properties:
              error:
                type: string
                x-go-name: Error
              status:
                type: string
                x-go-name: Status
    devfileNotFoundResponse:
      description: Failed to find the devfile.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                x-go-name: Status
        application/yaml:
          schema:
            type: object
            properties:
              status:
                type: string
                x-go-name: Status
    devfileResponse:
      description: |-
        Successful operation.

        Stack devfile content.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Devfile'
        application/yaml:
          schema:
            $ref: '#/components/schemas/Devfile'
    healthResponse:
      description: |-
        Successful operation.

        Health status.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                x-go-name: Message
        application/yaml:
          schema:
            type: object
            properties:
              message:
                type: string
                x-go-name: Message
    indexResponse:
      description: |-
        Successful operation.

        Index content.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Schema'
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Schema'
    starterProjectResponse:
      description: |-
        Successful operation.

        File bytes to download.
      content:
        application/zip:
          schema:
            type: string
            format: binary
  securitySchemes:
    basic:
      type: http
      scheme: basic
