#
# Copyright Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
openapi: 3.0.1
info:
  title: Devfile registry REST API.
  description: |-
    Documentation of devfile registry REST API.

    The devfile registry REST API is used for interacting with devfile registry. In this documentation, the host is serving the public devfile registry, you can change it to your own host if you want to use private devfile registry.
  version: 1.0.1
servers:
- url: https://registry.stage.devfile.io/
- url: https://registry.devfile.io/
paths:
  /:
    get:
      summary: Root endpoint of registry server.
      description: |-
        Sets up the handler for the root (/) endpoint on the server
        If html is requested (i.e. from a web browser), the viewer is displayed, otherwise the devfile index is served.
      operationId: serveRootEndpoint
      responses:
        default:
          description: Root response.
          content:
            text/html: {}
            application/json:
              schema:
                $ref: '#/components/schemas/IndexSchema'
            application/yaml:
              schema:
                $ref: '#/components/schemas/IndexSchema'
    post:
      operationId: postRootEndpoint
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    put:
      operationId: putRootEndpoint
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    delete:
      operationId: deleteRootEndpoint
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
  /health:
    get:
      tags:
        - server
      summary: Get health status.
      description: Return the devfile registry health status.
      operationId: serveHealthCheck
      responses:
        200:
          $ref: '#/components/responses/healthResponse'
        404:
          description: 'Page not found.'
          content: {}
    post:
      operationId: postHealthCheck
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    put:
      operationId: putHealthCheck
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    delete:
      operationId: deleteHealthCheck
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
  /index:
    get:
      tags:
        - devfile
      summary: Gets index schemas of the stack devfiles.
      description: |-
        Fetches the registry index file content of stack devfile type 
        from HTTP response
      operationId: serveDevfileIndexV1
      requestBody:
        description: The request body must be empty.
        content: {}
      parameters:
        - $ref: '#/components/parameters/nameParam'
        - $ref: '#/components/parameters/displayNameParam'
        - $ref: '#/components/parameters/descriptionParam'
        - $ref: '#/components/parameters/attributeNamesParam'
        - $ref: '#/components/parameters/tagsParam'
        - $ref: '#/components/parameters/archParam'
        - $ref: '#/components/parameters/iconParam'
        - $ref: '#/components/parameters/iconUriParam'
        - $ref: '#/components/parameters/projectTypeParam'
        - $ref: '#/components/parameters/languageParam'
        - $ref: '#/components/parameters/deprecatedParam'
        - $ref: '#/components/parameters/resourcesParam'
        - $ref: '#/components/parameters/starterProjectsParam'
        - $ref: '#/components/parameters/linkNamesParam'
        - $ref: '#/components/parameters/linksParam'
        - $ref: '#/components/parameters/gitRemoteNamesParam'
        - $ref: '#/components/parameters/gitRemotesParam'
        - $ref: '#/components/parameters/gitUrlParam'
        - $ref: '#/components/parameters/gitRemoteNameParam'
        - $ref: '#/components/parameters/gitSubDirParam'
        - $ref: '#/components/parameters/gitRevisionParam'
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/supportUrlParam'
      responses:
        200:
          $ref: '#/components/responses/indexResponse'
        404:
          description: 'Page not found.'
          content: {}
    post:
      operationId: postDevfileIndexV1
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    put:
      operationId: putDevfileIndexV1
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    delete:
      operationId: deleteDevfileIndexV1
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
  /index/{indexType}:
    get:
      tags:
        - devfile
      summary: Gets index schemas of the devfiles of specific type.
      description: |-
        Fetches the registry index file content of specific devfile type 
        from HTTP response
      operationId: serveDevfileIndexV1WithType
      requestBody:
        description: The request body must be empty.
        content: {}
      parameters:
        - name: indexType
          in: path
          description: The devfile type filter
          required: true
          schema:
            type: string
            x-go-name: IndexType
          x-go-name: IndexType
        - $ref: '#/components/parameters/nameParam'
        - $ref: '#/components/parameters/displayNameParam'
        - $ref: '#/components/parameters/descriptionParam'
        - $ref: '#/components/parameters/attributeNamesParam'
        - $ref: '#/components/parameters/tagsParam'
        - $ref: '#/components/parameters/archParam'
        - $ref: '#/components/parameters/iconParam'
        - $ref: '#/components/parameters/iconUriParam'
        - $ref: '#/components/parameters/projectTypeParam'
        - $ref: '#/components/parameters/languageParam'
        - $ref: '#/components/parameters/deprecatedParam'
        - $ref: '#/components/parameters/resourcesParam'
        - $ref: '#/components/parameters/starterProjectsParam'
        - $ref: '#/components/parameters/linkNamesParam'
        - $ref: '#/components/parameters/linksParam'
        - $ref: '#/components/parameters/gitRemoteNamesParam'
        - $ref: '#/components/parameters/gitRemotesParam'
        - $ref: '#/components/parameters/gitUrlParam'
        - $ref: '#/components/parameters/gitRemoteNameParam'
        - $ref: '#/components/parameters/gitSubDirParam'
        - $ref: '#/components/parameters/gitRevisionParam'
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/supportUrlParam'
      responses:
        200:
          $ref: '#/components/responses/indexResponse'
        404:
          description: 'Page not found.'
          content: {}
    post:
      operationId: postDevfileIndexV1WithType
      parameters:
        - name: indexType
          in: path
          description: The devfile type filter
          required: true
          schema:
            type: string
            x-go-name: IndexType
          x-go-name: IndexType
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    put:
      operationId: putDevfileIndexV1WithType
      parameters:
        - name: indexType
          in: path
          description: The devfile type filter
          required: true
          schema:
            type: string
            x-go-name: IndexType
          x-go-name: IndexType
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    delete:
      operationId: deleteDevfileIndexV1WithType
      parameters:
        - name: indexType
          in: path
          description: The devfile type filter
          required: true
          schema:
            type: string
            x-go-name: IndexType
          x-go-name: IndexType
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
  /v2index:
    get:
      tags:
        - devfile
      summary: Gets V2 index schemas of the stack devfiles.
      description: |-
        Fetches the registry version 2 index file content of 
        stack devfile type from HTTP response
      operationId: serveDevfileIndexV2
      requestBody:
        description: The request body must be empty.
        content: {}
      parameters:
        - $ref: '#/components/parameters/nameParam'
        - $ref: '#/components/parameters/displayNameParam'
        - $ref: '#/components/parameters/descriptionParam'
        - $ref: '#/components/parameters/attributeNamesParam'
        - $ref: '#/components/parameters/tagsParam'
        - $ref: '#/components/parameters/archParam'
        - $ref: '#/components/parameters/iconParam'
        - $ref: '#/components/parameters/iconUriParam'
        - $ref: '#/components/parameters/projectTypeParam'
        - $ref: '#/components/parameters/languageParam'
        - $ref: '#/components/parameters/minVersionParam'
        - $ref: '#/components/parameters/maxVersionParam'
        - $ref: '#/components/parameters/minSchemaVersionParam'
        - $ref: '#/components/parameters/maxSchemaVersionParam'
        - $ref: '#/components/parameters/deprecatedParam'
        - $ref: '#/components/parameters/defaultParam'
        - $ref: '#/components/parameters/resourcesParam'
        - $ref: '#/components/parameters/starterProjectsParam'
        - $ref: '#/components/parameters/linkNamesParam'
        - $ref: '#/components/parameters/linksParam'
        - $ref: '#/components/parameters/commandGroupsParam'
        - $ref: '#/components/parameters/gitRemoteNamesParam'
        - $ref: '#/components/parameters/gitRemotesParam'
        - $ref: '#/components/parameters/gitUrlParam'
        - $ref: '#/components/parameters/gitRemoteNameParam'
        - $ref: '#/components/parameters/gitSubDirParam'
        - $ref: '#/components/parameters/gitRevisionParam'
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/supportUrlParam'
      responses:
        200:
          $ref: '#/components/responses/v2IndexResponse'
        404:
          description: 'Page not found.'
          content: {}
    post:
      operationId: postDevfileIndexV2
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    put:
      operationId: putDevfileIndexV2
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    delete:
      operationId: deleteDevfileIndexV2
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
  /v2index/{indexType}:
    get:
      tags:
        - devfile
      summary: Gets V2 index schemas of the devfiles of specific type.
      description: |-
        Fetches the registry version 2 index file content 
        of specific devfile type from HTTP response
      operationId: serveDevfileIndexV2WithType
      requestBody:
        description: The request body must be empty.
        content: {}
      parameters:
        - name: indexType
          in: path
          description: The devfile type filter
          required: true
          schema:
            type: string
            x-go-name: IndexType
          x-go-name: IndexType
        - $ref: '#/components/parameters/nameParam'
        - $ref: '#/components/parameters/displayNameParam'
        - $ref: '#/components/parameters/descriptionParam'
        - $ref: '#/components/parameters/attributeNamesParam'
        - $ref: '#/components/parameters/tagsParam'
        - $ref: '#/components/parameters/archParam'
        - $ref: '#/components/parameters/iconParam'
        - $ref: '#/components/parameters/iconUriParam'
        - $ref: '#/components/parameters/projectTypeParam'
        - $ref: '#/components/parameters/languageParam'
        - $ref: '#/components/parameters/minVersionParam'
        - $ref: '#/components/parameters/maxVersionParam'
        - $ref: '#/components/parameters/minSchemaVersionParam'
        - $ref: '#/components/parameters/maxSchemaVersionParam'
        - $ref: '#/components/parameters/deprecatedParam'
        - $ref: '#/components/parameters/defaultParam'
        - $ref: '#/components/parameters/resourcesParam'
        - $ref: '#/components/parameters/starterProjectsParam'
        - $ref: '#/components/parameters/linkNamesParam'
        - $ref: '#/components/parameters/linksParam'
        - $ref: '#/components/parameters/commandGroupsParam'
        - $ref: '#/components/parameters/gitRemoteNamesParam'
        - $ref: '#/components/parameters/gitRemotesParam'
        - $ref: '#/components/parameters/gitUrlParam'
        - $ref: '#/components/parameters/gitRemoteNameParam'
        - $ref: '#/components/parameters/gitSubDirParam'
        - $ref: '#/components/parameters/gitRevisionParam'
        - $ref: '#/components/parameters/providerParam'
        - $ref: '#/components/parameters/supportUrlParam'
      responses:
        200:
          $ref: '#/components/responses/v2IndexResponse'
        404:
          description: 'Page not found.'
          content: {}
    post:
      operationId: postDevfileIndexV2WithType
      parameters:
        - name: indexType
          in: path
          description: The devfile type filter
          required: true
          schema:
            type: string
            x-go-name: IndexType
          x-go-name: IndexType
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    put:
      operationId: putDevfileIndexV2WithType
      parameters:
        - name: indexType
          in: path
          description: The devfile type filter
          required: true
          schema:
            type: string
            x-go-name: IndexType
          x-go-name: IndexType
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    delete:
      operationId: deleteDevfileIndexV2WithType
      parameters:
        - name: indexType
          in: path
          description: The devfile type filter
          required: true
          schema:
            type: string
            x-go-name: IndexType
          x-go-name: IndexType
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
  /devfiles/{stack}:
    get:
      tags:
        - devfile
      summary: Get devfile by stack name.
      description: Return the specific stack devfile content of devfile registry.
      operationId: serveDevfile
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - $ref: '#/components/parameters/minSchemaVersionParam'
        - $ref: '#/components/parameters/maxSchemaVersionParam'
      requestBody:
        description: The request body must be empty.
        content: {}
      responses:
        200:
          $ref: '#/components/responses/devfileResponse'
        404:
          $ref: '#/components/responses/devfileNotFoundResponse'
        500:
          $ref: '#/components/responses/devfileErrorResponse'
    post:
      operationId: postDevfile
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    put:
      operationId: putDevfile
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    delete:
      operationId: deleteDevfile
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
  /devfiles/{stack}/{version}:
    get:
      tags:
        - devfile
      summary: Get devfile by stack name.
      description: Return the specific stack devfile content of devfile registry.
      operationId: serveDevfileWithVersion
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - name: version
          in: path
          description: The version of the stack
          required: true
          schema:
            type: string
            x-go-name: Version
          x-go-name: Version
        - $ref: '#/components/parameters/minSchemaVersionParam'
        - $ref: '#/components/parameters/maxSchemaVersionParam'
      requestBody:
        description: The request body must be empty.
        content: {}
      responses:
        200:
          $ref: '#/components/responses/devfileResponse'
        404:
          $ref: '#/components/responses/devfileNotFoundResponse'
        500:
          $ref: '#/components/responses/devfileErrorResponse'
    post:
      operationId: postDevfileWithVersion
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - name: version
          in: path
          description: The version of the stack
          required: true
          schema:
            type: string
            x-go-name: Version
          x-go-name: Version
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    put:
      operationId: putDevfileWithVersion
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - name: version
          in: path
          description: The version of the stack
          required: true
          schema:
            type: string
            x-go-name: Version
          x-go-name: Version
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    delete:
      operationId: deleteDevfileWithVersion
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - name: version
          in: path
          description: The version of the stack
          required: true
          schema:
            type: string
            x-go-name: Version
          x-go-name: Version
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
  /devfiles/{stack}/starter-projects/{starterProject}:
    get:
      summary: Fetches starter project by stack and project name
      description: |-
        Fetches starter project specified in requested registry stack devfile with 
        version's content and provides an archive (zip) file download as the HTTP response.
      operationId: serveDevfileStarterProject
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - name:  starterProject
          in: path
          description: The starter project name in the stack devfile
          required: true
          schema:
            type: string
            x-go-name: StarterProject
          x-go-name: StarterProject
        - $ref: '#/components/parameters/minSchemaVersionParam'
        - $ref: '#/components/parameters/maxSchemaVersionParam'
      responses:
        '200':
          $ref: '#/components/responses/starterProjectResponse'
        '404':
          description: 'Page not found.'
          content: {}
        '500':
          description: Failed to get the devfile or starter project.
          $ref: '#/components/responses/devfileErrorResponse'
    post:
      operationId: postDevfileStarterProject
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - name:  starterProject
          in: path
          description: The starter project name in the stack devfile
          required: true
          schema:
            type: string
            x-go-name: StarterProject
          x-go-name: StarterProject
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    put:
      operationId: putDevfileStarterProject
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - name:  starterProject
          in: path
          description: The starter project name in the stack devfile
          required: true
          schema:
            type: string
            x-go-name: StarterProject
          x-go-name: StarterProject
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    delete:
      operationId: deleteDevfileStarterProject
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - name:  starterProject
          in: path
          description: The starter project name in the stack devfile
          required: true
          schema:
            type: string
            x-go-name: StarterProject
          x-go-name: StarterProject
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
  /devfiles/{stack}/{version}/starter-projects/{starterProject}:
    get:
      summary: Fetches starter project by stack name, stack version, and project name
      description: |-
        Fetches starter project specified in requested registry stack devfile with 
        version's content and provides an archive (zip) file download as the HTTP response.
      operationId: serveDevfileStarterProjectWithVersion
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - name: version
          in: path
          description: The version of the stack
          required: true
          schema:
            type: string
            x-go-name: Version
          x-go-name: Version
        - name:  starterProject
          in: path
          description: The starter project name in the stack devfile
          required: true
          schema:
            type: string
            x-go-name: StarterProject
          x-go-name: StarterProject
        - $ref: '#/components/parameters/minSchemaVersionParam'
        - $ref: '#/components/parameters/maxSchemaVersionParam'
      responses:
        '200':
          $ref: '#/components/responses/starterProjectResponse'
        '404':
          description: 'Page not found.'
          content: {}
        '500':
          description: Failed to get the devfile or starter project.
          $ref: '#/components/responses/devfileErrorResponse'
    post:
      operationId: postDevfileStarterProjectWithVersion
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - name: version
          in: path
          description: The version of the stack
          required: true
          schema:
            type: string
            x-go-name: Version
          x-go-name: Version
        - name:  starterProject
          in: path
          description: The starter project name in the stack devfile
          required: true
          schema:
            type: string
            x-go-name: StarterProject
          x-go-name: StarterProject
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    put:
      operationId: putDevfileStarterProjectWithVersion
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - name: version
          in: path
          description: The version of the stack
          required: true
          schema:
            type: string
            x-go-name: Version
          x-go-name: Version
        - name:  starterProject
          in: path
          description: The starter project name in the stack devfile
          required: true
          schema:
            type: string
            x-go-name: StarterProject
          x-go-name: StarterProject
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'
    delete:
      operationId: deleteDevfileStarterProjectWithVersion
      parameters:
        - name: stack
          in: path
          description: The stack name
          required: true
          schema:
            type: string
            x-go-name: Stack
          x-go-name: Stack
        - name: version
          in: path
          description: The version of the stack
          required: true
          schema:
            type: string
            x-go-name: Version
          x-go-name: Version
        - name:  starterProject
          in: path
          description: The starter project name in the stack devfile
          required: true
          schema:
            type: string
            x-go-name: StarterProject
          x-go-name: StarterProject
      responses:
        405:
          $ref: '#/components/responses/methodNotAllowedResponse'

components:
  schemas:
    Devfile:
      description: Describes the structure of a cloud-native devworkspace and development environment.
      x-go-type: v1alpha2.Devfile
      x-go-type-import:
        path: github.com/devfile/api/v2/pkg/apis/workspaces/v1alpha2
    IndexSchema:
      description: The index file schema
      x-go-type: schema.Schema
      x-go-type-import:
        path: github.com/devfile/registry-support/index/generator/schema
    IndexParams:
      description: IndexParams defines parameters for index endpoints.
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        displayName:
          $ref: '#/components/schemas/DisplayName'
        description:
          $ref: '#/components/schemas/Description'
        attributeNames:
          $ref: '#/components/schemas/AttributeNames'
        tags:
          $ref: '#/components/schemas/Tags'
        icon:
          $ref: '#/components/schemas/Icon'
        iconUri:
          $ref: '#/components/schemas/IconUri'
        arch:
          $ref: '#/components/schemas/Architectures'
        projectType:
          $ref: '#/components/schemas/ProjectType'
        language:
          $ref: '#/components/schemas/Language'
        minVersion:
          $ref: '#/components/schemas/Version'
        maxVersion:
          $ref: '#/components/schemas/Version'
        minSchemaVersion:
          $ref: '#/components/schemas/SchemaVersion'
        maxSchemaVersion:
          $ref: '#/components/schemas/SchemaVersion'
        deprecated:
          $ref: '#/components/schemas/Deprecated'
        default:
          $ref: '#/components/schemas/Default'
        resources:
          $ref: '#/components/schemas/Resources'
        starterProjects:
          $ref: '#/components/schemas/StarterProjects'
        linkNames:
          $ref: '#/components/schemas/LinkNames'
        links:
          $ref: '#/components/schemas/Links'
        commandGroups:
          $ref: '#/components/schemas/CommandGroups'
        gitRemoteNames:
          $ref: '#/components/schemas/GitRemoteNames'
        gitRemotes:
          $ref: '#/components/schemas/GitRemotes'
        gitUrl:
          $ref: '#/components/schemas/Url'
        gitRemoteName:
          $ref: '#/components/schemas/GitRemoteName'
        gitSubDir:
          $ref: '#/components/schemas/GitSubDir'
        gitRevision:
          $ref: '#/components/schemas/GitRevision'
        provider:
          $ref: '#/components/schemas/Provider'
        supportUrl:
          $ref: '#/components/schemas/Url'
    Name:
      description: Name of devfile registry entry
      type: string
    DisplayName:
      description: User readable name of devfile registry entry
      type: string
    Description:
      description: Description of devfile registry entry
      type: string
    AttributeNames:
      description: List of the YAML free-form attribute names
      type: array
      uniqueItems: true
      items:
        description: YAML free-form attribute name
        type: string
    Tags:
      description: List of devfile subject tags
      type: array
      uniqueItems: false
      items:
        description: A subject tag to describe the devfile workspace
        type: string
    Icon:
      description: Optional devfile icon encoding type
      type: string
    IconUri:
      description: Optional devfile icon uri, can be a URL or a relative path in the project
      type: string
    Architectures:
      description: Optional list of processor architectures that the devfile supports, empty list suggests that the devfile can be used on any architecture
      type: array
      uniqueItems: false
      items:
        description: Architecture describes the architecture type
        type: string
        enum: 
          - "amd64"
          - "arm64"
          - "ppc64le"
          - "s390x"
    ProjectType:
      description: Type of project the devfile supports
      type: string
    Language:
      description: Programming language of the devfile workspace
      type: string
    Version:
      description: Devfile registry entry version number
      type: string
      pattern: '^[0-9]+\.[0-9]+(\.[0-9]+)?$'
      example: 1.4.0
    SchemaVersion:
      description: Devfile schema version number
      type: string
      pattern: '^[0-9]+\.[0-9]+(\.[0-9]+(\-alpha)?)?$'
      example: 2.2.0, 2.2.3-alpha
    Deprecated:
      description: Flag for deprecated devfile registry entry
      type: boolean
    Default:
      description: Flag for default devfile registry entry version 
      type: boolean
    Resources:
      description: List of file resources for the devfile
      type: array
      uniqueItems: false
      items:
        type: string
    StarterProjects:
      description: List of starter project names
      type: array
      uniqueItems: true
      items:
        description: Name of starter project resources
        type: string
    Url:
      description: Url field type
      type: string
    LinkNames:
      description: Names of devfile links
      type: array
      uniqueItems: true
      items:
        type: string
    Links:
      description: List of devfile links
      type: array
      uniqueItems: false
      items:
        $ref: '#/components/schemas/Url'
    CommandGroups:
      description: List of command groups defined in devfile
      type: array
      uniqueItems: true
      items:
        type: string
        enum:
          - build
          - run
          - test
          - debug
          - deploy
    GitRemoteName:
      description: Git repository remote name
      type: string
    GitRemoteNames:
      description: List of git repository remote names
      type: array
      uniqueItems: true
      items:
        $ref: '#/components/schemas/GitRemoteName'
    GitRemotes:
      description: List of git repository remote urls
      type: array
      uniqueItems: false
      items:
        $ref: '#/components/schemas/Url'
    GitSubDir:
      description: Subdirectory of git repository to use as reference
      type: string
    GitRevision:
      description: Branch, tag, or commit reference
      type: string
    Provider:
      description: Name of provider of the devfile registry entry
      type: string
  parameters:
    nameParam:
      name: name
      in: query
      required: false
      description: Search string to filter stacks by their name
      schema:
        $ref: '#/components/schemas/Name'
    displayNameParam:
      name: displayName
      in: query
      required: false
      description: Search string to filter stacks by their display names
      schema:
        $ref: '#/components/schemas/DisplayName'
    descriptionParam:
      name: description
      in: query
      required: false
      description: Search string to filter stacks by the description text
      schema:
        $ref: '#/components/schemas/Description'
    attributeNamesParam:
      name: attributeNames
      in: query
      required: false
      description: |-
        Collection of search strings to filter stacks by the names of 
        defined free-form attributes
      schema:
        type: array
        items:
          type: string
    tagsParam:
      name: tags
      in: query
      required: false
      description: Collection of search strings to filter stacks by their tags
      schema:
        type: array
        items:
          type: string
    iconParam:
      name: icon
      in: query
      description: Toggle on encoding content passed
      required: false
      schema:
        $ref: '#/components/schemas/Icon'
    iconUriParam:
      name: iconUri
      in: query
      description: Search string to filter stacks by their icon uri
      required: false
      schema:
        $ref: '#/components/schemas/IconUri'
    archParam:
      name: arch
      in: query
      description: Collection of search strings to filter stacks by their architectures
      required: false
      schema:
        $ref: '#/components/schemas/Architectures'
    projectTypeParam:
      name: projectType
      in: query
      required: false
      description: Search string to filter stacks by their project type
      schema:
        $ref: '#/components/schemas/ProjectType'
    languageParam:
      name: language
      in: query
      required: false
      description: Search string to filter stacks by their programming language
      schema:
        $ref: '#/components/schemas/Language'
    minVersionParam:
      name: minVersion
      in: query
      required: false
      description: The minimum stack version
      schema:
        $ref: '#/components/schemas/Version'
    maxVersionParam:
      name: maxVersion
      in: query
      required: false
      description: The maximum stack version
      schema:
        $ref: '#/components/schemas/Version'
    minSchemaVersionParam:
      name: minSchemaVersion
      in: query
      required: false
      description: The minimum devfile schema version
      schema:
        $ref: '#/components/schemas/SchemaVersion'
    maxSchemaVersionParam:
      name: maxSchemaVersion
      in: query
      required: false
      description: The maximum devfile schema version
      schema:
        $ref: '#/components/schemas/SchemaVersion'
    deprecatedParam:
      name: deprecated
      in: query
      required: false
      description: Boolean to filter stacks if they are deprecated or not
      schema:
        $ref: '#/components/schemas/Deprecated'
    defaultParam:
      name: default
      in: query
      required: false
      description: Boolean to filter stacks if they are default or not
      schema:
        $ref: '#/components/schemas/Default'
    resourcesParam:
      name: resources
      in: query
      required: false
      description: |- 
        Collection of search strings to filter stacks by their 
        resource files
      schema:
        $ref: '#/components/schemas/Resources'
    starterProjectsParam:
      name: starterProjects
      in: query
      required: false
      description: |-
        Collection of search strings to filter stacks by the names 
        of the starter projects
      schema:
        $ref: '#/components/schemas/StarterProjects'
    linkNamesParam:
      name: linkNames
      in: query
      required: false
      description: |-
        Collection of search strings to filter stacks by the names 
        of the link sources
      schema:
        $ref: '#/components/schemas/LinkNames'
    linksParam:
      name: links
      in: query
      required: false
      description: |- 
        Collection of search strings to filter stacks by their link 
        sources
      schema:
        $ref: '#/components/schemas/Links'
    commandGroupsParam:
      name: commandGroups
      in: query
      required: false
      description: |- 
        Collection of search strings to filter stacks by their present command 
        groups
      schema:
        $ref: '#/components/schemas/CommandGroups'
    gitRemoteNamesParam:
      name: gitRemoteNames
      in: query
      required: false
      description: |-
        Collection of search strings to filter stacks by the names of 
        the git remotes
      schema:
        $ref: '#/components/schemas/GitRemoteNames'
    gitRemotesParam:
      name: gitRemotes
      in: query
      required: false
      description: |-
        Collection of search strings to filter stacks by the URIs of 
        the git remotes
      schema:
        $ref: '#/components/schemas/GitRemotes'
    gitUrlParam:
      name: gitUrl
      in: query
      required: false
      description: Search string to filter stacks by their git urls
      schema:
        $ref: '#/components/schemas/Url'
    gitRemoteNameParam:
      name: gitRemoteName
      in: query
      required: false
      description: |- 
        Search string to filter stacks by their git remote name
      schema:
        $ref: '#/components/schemas/GitRemoteName'
    gitSubDirParam:
      name: gitSubDir
      in: query
      required: false
      description: |-
        Search string to filter stacks by their target subdirectory 
        of the git repository
      schema:
        $ref: '#/components/schemas/GitSubDir'
    gitRevisionParam:
      name: gitRevision
      in: query
      required: false
      description: Search string to filter stacks by their git revision
      schema:
        $ref: '#/components/schemas/GitRevision'
    providerParam:
      name: provider
      in: query
      required: false
      description: Search string to filter stacks by the stack provider
      schema:
        $ref: '#/components/schemas/Provider'
    supportUrlParam:
      name: supportUrl
      in: query
      required: false
      description: Search string to filter stacks by their given support url
      schema:
        $ref: '#/components/schemas/Url'
  responses:
    devfileErrorResponse:
      description: Failed to get the devfile.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                x-go-name: Error
              status:
                type: string
                x-go-name: Status
        application/yaml:
          schema:
            type: object
            properties:
              error:
                type: string
                x-go-name: Error
              status:
                type: string
                x-go-name: Status
    devfileNotFoundResponse:
      description: Failed to find the devfile.
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                x-go-name: Status
        application/yaml:
          schema:
            type: object
            properties:
              status:
                type: string
                x-go-name: Status
    devfileResponse:
      description: |-
        Successful operation.

        Stack devfile content.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Devfile'
        application/yaml:
          schema:
            $ref: '#/components/schemas/Devfile'
    healthResponse:
      description: |-
        Successful operation.

        Health status.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                x-go-name: Message
            required:
              - message
        application/yaml:
          schema:
            type: object
            properties:
              message:
                type: string
                x-go-name: Message
            required:
              - message
    indexResponse:
      description: |-
        Successful operation.

        Index content.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexSchema'
        application/yaml:
          schema:
            $ref: '#/components/schemas/IndexSchema'
    v2IndexResponse:
      description: |-
        Successful operation.

        V2 Index content.
      content:
        application/json:
          schema:
            x-go-type: schema.Schema
            x-go-type-import:
              path: github.com/devfile/registry-support/index/generator/schema
        application/yaml:
          schema:
            x-go-type: schema.Schema
            x-go-type-import:
              path: github.com/devfile/registry-support/index/generator/schema
    starterProjectResponse:
      description: |-
        Successful operation.

        File bytes to download.
      content:
        application/zip:
          schema:
            type: string
            format: binary
    methodNotAllowedResponse:
      description: Method used is not supported.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                x-go-name: Message
            required:
              - message
        application/yaml:
          schema:
            type: object
            properties:
              message:
                type: string
                x-go-name: Message
            required:
              - message
  securitySchemes:
    basic:
      type: http
      scheme: basic
