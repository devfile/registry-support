#
#   Copyright 2021-2022 Red Hat, Inc.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "devfileregistry.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  name: {{ template "devfileregistry.fullname" . }}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ template "devfileregistry.name" . }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "devfileregistry.name" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      volumes:
        - name: devfile-registry-storage
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "devfileregistry.fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: config
          configMap:
            name: {{ template "devfileregistry.fullname" . }}
            items:
              - key: registry-config.yml
                path: config.yml
        - name: viewer-config
          configMap:
            name: {{ template "devfileregistry.fullname" . }}
            items:
              - key: devfile-registry-hosts.json
                path: devfile-registry-hosts.json

      containers:
      - image: "{{ .Values.devfileIndex.image }}:{{ .Values.devfileIndex.tag }}"
        imagePullPolicy: {{ .Values.devfileIndex.imagePullPolicy }}
        name: devfile-registry
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
        startupProbe:
          httpGet:
            path: /viewer
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 1
          timeoutSeconds: 10          
        resources:
          limits:
            memory: {{ .Values.devfileIndex.memoryLimit }}
          requests:
            memory: 64Mi
        env:
          - name: DEVFILE_VIEWER_ROOT
            value: "/viewer"
          - name: REGISTRY_NAME
            value: {{ .Values.telemetry.registryName }}
          - name: TELEMETRY_KEY
            value: {{ .Values.telemetry.key }}
        volumeMounts:
        - name: viewer-config
          mountPath: "/app/config"
          readOnly: false

      - image: "{{ .Values.ociRegistry.image }}:{{ .Values.ociRegistry.tag }}"
        imagePullPolicy: {{ .Values.ociRegistry.imagePullPolicy }}
        name: oci-registry
        ports:
        livenessProbe:
          httpGet:
            path: /v2
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /v2
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          timeoutSeconds: 3
        resources:
          limits:
            memory: {{ .Values.ociRegistry.memoryLimit }}
          requests:
            memory: 64Mi
        volumeMounts:
        - name: devfile-registry-storage
          mountPath: "/var/lib/registry"
        - name: config
          mountPath: "/etc/docker/registry"
          readOnly: true
