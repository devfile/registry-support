#
# Copyright (c) 2020-2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: Next Dockerimage

on:
  push:
    branches: [ main ]
  repository_dispatch:
    types: [build]

jobs:
  indexServerBuild:
    runs-on: ubuntu-latest
    steps:
    - name: Check out registry support source code
      uses: actions/checkout@v2
    - name: Login to Quay
      uses: docker/login-action@v1 
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
    - name: Build the index server base image
      run: cd index/server && ./build.sh
    - name: Push the index server base image
      run: cd index/server && ./push.sh quay.io/devfile/devfile-index-base:next

  dispatch:
    needs: indexServerBuild
    strategy:
      matrix:
        repo: ['devfile/registry']
    runs-on: ubuntu-latest
    steps:
      - name: Get the repository name and commit sha
        id: get_commit_info
        run: |
          # Check if repository name is not set in the client payload
          # If it's not set, the triggered commit came from this repo (registry-support)
          # If it is set, the triggered commit came from registry-viewer
          if [ -z ${{ github.event.client_payload.repo }} ];
          then
            echo ::set-output name=repo::$(echo ${{ github.event.repository.name }})
          else
            echo ::set-output name=repo::$(echo ${{ github.event.client_payload.repo }})
          fi
          
          # Check if commit sha is not set in the client payload
          # If it's not set, the triggered commit came from this repo (registry-support)
          # If it is set, the triggered commit came from registry-viewer

          if [ -z ${{ github.event.client_payload.sha }} ];
          then
            echo ::set-output name=sha::$(echo ${{ github.sha }})
          else
            echo ::set-output name=sha::$(echo ${{ github.event.client_payload.sha }})
          fi
      - name: Repository dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: build
          client-payload: '{"repo": "${{ steps.get_commit_info.outputs.REPO }}", "sha": "${{ steps.get_commit_info.outputs.SHA }}"}'

  ociRegistryBuild:
    runs-on: ubuntu-latest
    steps:
    - name: Check out registry support source code
      uses: actions/checkout@v2
    - name: Build and push oci-registry docker image
      uses: docker/build-push-action@v1.1.0
      with:
        path: ./oci-registry
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
        registry: quay.io
        repository: devfile/oci-registry
        dockerfile: ./oci-registry/Dockerfile
        tags: next
        tag_with_sha: true

  devfileRegistryIntegrationBuild:
    runs-on: ubuntu-latest
    steps:
    - name: Check out registry support source code
      uses: actions/checkout@v2
    - name: Login to Quay
      uses: docker/login-action@v1 
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
    - name: Build the index server base image
      run: cd tests/integration && ./docker-build.sh
    - name: Push the index server base image
      run: cd tests/integration && ./docker-push.sh quay.io/devfile/devfile-registry-integration:next